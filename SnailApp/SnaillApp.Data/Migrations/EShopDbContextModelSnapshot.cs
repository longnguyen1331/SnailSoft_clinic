// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnailApp.Data.EF;

#nullable disable

namespace SnailApp.Data.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    partial class EShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc")
                        },
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba6-df3f325983dc")
                        },
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba8-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Abouts", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AboutTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AboutId")
                        .HasColumnType("int");

                    b.Property<string>("AboutUs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AboutTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppConfigs", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "15fcc4c0-457a-40ea-b8e8-146b5bded10f",
                            Description = "Quản lý cửa hàng",
                            Name = "StoreManager",
                            NormalizedName = "StoreManager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba5-df3f325983dc"),
                            ConcurrencyStamp = "3d746737-5fa2-40f8-8827-c0b765141472",
                            Description = "Quản lý",
                            Name = "Manager",
                            NormalizedName = "manager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba6-df3f325983dc"),
                            ConcurrencyStamp = "452e3aac-ccf2-43c1-92f6-720ad71b0e06",
                            Description = "Nhân viên kho",
                            Name = "WarehouseStaff",
                            NormalizedName = "WarehouseStaff"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba7-df3f325983dc"),
                            ConcurrencyStamp = "fa6687cc-c1d5-4491-8d57-8b43a316a9b2",
                            Description = "Nhân viên thu ngân",
                            Name = "Cashier",
                            NormalizedName = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba8-df3f325983dc"),
                            ConcurrencyStamp = "4f9f2e76-f33e-45bd-aa45-0c14d6fa9c03",
                            Description = "Nhân viên bán hàng",
                            Name = "ShopAssistant",
                            NormalizedName = "ShopAssistant"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba9-df3f325983dc"),
                            ConcurrencyStamp = "d1da8550-1029-43d4-8724-724863d9b4c9",
                            Description = "Quản lý chi nhánh",
                            Name = "BranchManager",
                            NormalizedName = "BranchManager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            ConcurrencyStamp = "aea3f2ce-09ed-4ffd-b51c-fa333e7fbe2d",
                            Description = "Quản trị hệ thống",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppRoleTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AppRoleTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1032),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý cửa hàng",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1033),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản lý cửa hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1035),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Store owner",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1035),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Store manager",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba5-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1036),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1036),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản lý",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba5-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1037),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "General manager",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1038),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "General manager",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba6-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1039),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên kho",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1039),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên kho",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba6-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1040),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Warehouse staff",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1041),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Warehouse staff",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba7-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1042),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên thu ngân",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1042),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên thu ngân",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba7-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1043),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Cashier",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1043),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cashier",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba8-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1044),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên bán hàng",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1045),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên bán hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba8-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1046),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Shop assistant",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1046),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shop assistant",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba9-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1047),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý chi nhánh",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1047),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản lý chi nhánh",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba9-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1048),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Branch manager",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1049),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Branch manager",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 13,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1050),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản trị hệ thống",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1050),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản trị hệ thống",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 14,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1052),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Branch Manager",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(1052),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Branch Manager",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActivateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressWard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppUserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStillInUse")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastimePurchase")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("NoNhaCungCap")
                        .HasColumnType("float");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RewardPoints")
                        .HasColumnType("float");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoDonHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TongTienTraHang")
                        .HasColumnType("float");

                    b.Property<double>("TotalDebt")
                        .HasColumnType("float");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserStatusId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("GenderId");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            Address = "09 Lê Hồng Phong",
                            AppUserStatusId = 1,
                            Code = "001",
                            ConcurrencyStamp = "41484e11-0cc6-42ef-b36e-5d44003cee97",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenkhachuy2709@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Huy",
                            IsActive = true,
                            IsDelete = false,
                            IsEmailVerified = false,
                            IsPhoneVerified = false,
                            IsStillInUse = true,
                            LastName = "Nguyen Khac",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NoNhaCungCap = 0.0,
                            NormalizedEmail = "nguyenkhachuy2709@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEN+HcKuz3fF7A0hRJLx13K4flOTYxAjjbVOM/mbM51TZ7375lgpTK09+IvTdR9tUJg==",
                            PhoneNumber = "0915780794",
                            PhoneNumberConfirmed = false,
                            RegisterDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RewardPoints = 0.0,
                            SecurityStamp = "",
                            SoDonHang = 0,
                            StartingDate = new DateTime(2022, 1, 2, 12, 54, 50, 151, DateTimeKind.Local).AddTicks(7903),
                            TongTienTraHang = 0.0,
                            TotalDebt = 0.0,
                            TotalMoney = 0.0,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3494"),
                            AccessFailedCount = 0,
                            Address = "09 Lê Hồng Phong",
                            AppUserStatusId = 1,
                            Code = "002",
                            ConcurrencyStamp = "3955228c-ea47-4475-b45c-42c388984183",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "long@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Long",
                            IsActive = true,
                            IsDelete = false,
                            IsEmailVerified = false,
                            IsPhoneVerified = false,
                            IsStillInUse = true,
                            LastName = "Nguyen Ho Phi",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NoNhaCungCap = 0.0,
                            NormalizedEmail = "long@gmail.com",
                            NormalizedUserName = "long",
                            PasswordHash = "AQAAAAEAACcQAAAAELb/j70wdWz9CRAANRV57ipOfNAqyaI2JmDMLRn/mmFzHYlFP5ZL7EtRZFxjGgD/9w==",
                            PhoneNumber = "0915780224",
                            PhoneNumberConfirmed = false,
                            RegisterDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RewardPoints = 0.0,
                            SecurityStamp = "",
                            SoDonHang = 0,
                            StartingDate = new DateTime(2022, 1, 2, 12, 54, 50, 157, DateTimeKind.Local).AddTicks(6097),
                            TongTienTraHang = 0.0,
                            TotalDebt = 0.0,
                            TotalMoney = 0.0,
                            TwoFactorEnabled = false,
                            UserName = "long"
                        },
                        new
                        {
                            Id = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3422"),
                            AccessFailedCount = 0,
                            Address = "09 Lê Hồng Phong",
                            AppUserStatusId = 1,
                            Code = "003",
                            ConcurrencyStamp = "eb29b3b8-1129-4dff-a28c-f9cbd61a0dc1",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tin",
                            IsActive = true,
                            IsDelete = false,
                            IsEmailVerified = false,
                            IsPhoneVerified = false,
                            IsStillInUse = true,
                            LastName = "Ngo Trung",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NoNhaCungCap = 0.0,
                            NormalizedEmail = "tin@gmail.com",
                            NormalizedUserName = "tin",
                            PasswordHash = "AQAAAAEAACcQAAAAEDJyKTjynH32cRJBb0hkzh7/n5PBvC+WhqVHmgS7EAIUlBmijaJRTljbTwI21BosNw==",
                            PhoneNumber = "0922780224",
                            PhoneNumberConfirmed = false,
                            RegisterDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RewardPoints = 0.0,
                            SecurityStamp = "",
                            SoDonHang = 0,
                            StartingDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5096),
                            TongTienTraHang = 0.0,
                            TotalDebt = 0.0,
                            TotalMoney = 0.0,
                            TwoFactorEnabled = false,
                            UserName = "tin"
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_AppUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("AppUserTypeId");

                    b.ToTable("AppUser_AppUserTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AppUserTypeId = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6711),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6711),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3494"),
                            AppUserTypeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6712),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6713),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3422"),
                            AppUserTypeId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6717),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6718),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_BasicSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BasicSalaryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BasicSalaryId");

                    b.ToTable("AppUser_BasicSalarys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AppUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            BasicSalaryId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7019),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7019),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_CommissionDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommissionDiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CommissionDiscountId");

                    b.ToTable("AppUser_CommissionDiscounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AppUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            CommissionDiscountId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7092),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7092),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PromotionId");

                    b.ToTable("AppUser_Promotions", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserFeedbacks", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserHelp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUserHelps", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppUserStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InActive",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(824),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(824),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(825),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(826),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppUserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserStatusId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AppUserStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserStatusId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(838),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(838),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chưa kích hoạt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserStatusId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(839),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(840),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InActive",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserStatusId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(841),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(841),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AppUserStatusId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(842),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(843),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppUserTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "C",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6661),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6661),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Su",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6662),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6662),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "St",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6663),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6664),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AppUserTypeTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserTypeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6683),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6683),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khách hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserTypeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6685),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6685),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Customer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserTypeId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6687),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6687),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà cung cấp",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AppUserTypeId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6688),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6688),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Supplier",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            AppUserTypeId = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6689),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6690),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            AppUserTypeId = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6690),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6691),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Staff",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attributes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KG",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6358),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6359),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Size",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6361),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6361),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AttributeTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6378),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6378),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Số kí",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AttributeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6380),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6380),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Kg",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AttributeId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6381),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6382),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Kích thước",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AttributeId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6382),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6383),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Size",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.ToTable("AttributeValues", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6432),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6433),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AttributeId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6434),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6434),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeValueTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributeValueId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeValueId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AttributeValueTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeValueId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6488),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6489),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "1kg",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AttributeValueId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6493),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6494),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AttributeValueId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6495),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6496),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "2kg",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AttributeValueId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6497),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6498),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.BasicSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BasicSalarys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "001",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6869),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6870),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6869),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0,
                            Value = 1000000.0
                        },
                        new
                        {
                            Id = 2,
                            Code = "002",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6871),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6872),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6871),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0,
                            Value = 2000000.0
                        },
                        new
                        {
                            Id = 3,
                            Code = "003",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6873),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6874),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6873),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0,
                            Value = 3000000.0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.BasicSalaryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasicSalaryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicSalaryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("BasicSalaryTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasicSalaryId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6979),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6980),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản lý",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            BasicSalaryId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6984),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6985),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            BasicSalaryId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6986),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6987),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            BasicSalaryId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6987),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6988),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            BasicSalaryId = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6989),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6989),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản lý kho",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            BasicSalaryId = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6990),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6990),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateContact")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetServiceSelectionId")
                        .HasColumnType("int");

                    b.Property<double>("PetWeight")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("SpecialNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PetServiceSelectionId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ClinicConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacebookAppid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookAppname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookAppsecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookChat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FacebookLogin")
                        .HasColumnType("bit");

                    b.Property<string>("FacebookPixel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Favicon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_apiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_appId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_authDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_measurementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_messagingSenderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_projectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firebase_storageBucket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleApikey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleAppname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleClientid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleClientsecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GoogleLogin")
                        .HasColumnType("bit");

                    b.Property<string>("GoogleScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ClinicConfigs", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CommissionDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CommissionDiscounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Commission = 0.0,
                            CommissionPercent = 2.0,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7041),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Discount = 0.0,
                            DiscountPercent = 10.0,
                            FromDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7042),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Commission = 0.0,
                            CommissionPercent = 5.0,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7044),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Discount = 0.0,
                            DiscountPercent = 15.0,
                            FromDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7045),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CommissionDiscountTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommissionDiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommissionDiscountId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CommissionDiscountTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommissionDiscountId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7063),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7063),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên thử việc",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CommissionDiscountId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7065),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7065),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CommissionDiscountId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7066),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7067),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên chính thức",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CommissionDiscountId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7068),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7069),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactInformation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "29 Trần Trọng Cung, Q.7, TP. HCM",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6829),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "hello@chinopet.com",
                            FacebookLink = "/Chinopetvn",
                            InstagramLink = "https://www.instagram.com/",
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6829),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PhoneNumber = "037 6505247",
                            SortOrder = 0,
                            YoutubeLink = "https://www.youtube.com/"
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CustomerTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CustomerTypeTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int?>("DocTemplateTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaperSizeId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocTemplateTypeId");

                    b.HasIndex("PaperSizeId");

                    b.ToTable("DocTemplates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6611),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6612),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu thu mẫu 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6613),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 2,
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6614),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu chi mẫu 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6615),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 3,
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6615),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hóa đơn bán hàng mẫu 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6616),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 4,
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6616),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu nhập kho mẫu 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6617),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 5,
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6618),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu xuất kho mẫu 1",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocTemplateTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PT",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6554),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6555),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "PC",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6555),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6556),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "HDBHPOS",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6557),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6557),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "PN",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6558),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6558),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "PX",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6559),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6559),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplateTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int?>("DocTemplateTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocTemplateTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DocTemplateTypeTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6575),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 1,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6576),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu thu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6577),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 1,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6577),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Receipt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6578),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 2,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6579),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu chi",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6580),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 2,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6581),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Payment",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6582),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 3,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6582),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hóa đơn bán hàng POS",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6583),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 3,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6583),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Invoice POS",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6584),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 4,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6585),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu nhập kho",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6586),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 4,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6586),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Warehouse receipt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6587),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 5,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6587),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu xuất kho",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6588),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DocTemplateTypeId = 5,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6589),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Warehouse export",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.FavoriteProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("FavoriteProducts", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "M",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5522),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5523),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "F",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5524),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5524),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.GenderTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GenderTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5551),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            GenderId = 1,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5551),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nam",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5553),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            GenderId = 1,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5553),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Male",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5554),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            GenderId = 2,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5555),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nữ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5556),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            GenderId = 2,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5556),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Female",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "vi",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(120),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = true,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(128),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tiếng Việt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "en",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(131),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(131),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "English",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NSX1",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6295),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6295),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "NSX2",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6296),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6297),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "NSX3",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6297),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6298),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "NSX4",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6299),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6299),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ManufacturerTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ManufacturerTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6324),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ManufacturerId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6324),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà sản xuất 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6325),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ManufacturerId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6326),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manufacturer 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6327),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ManufacturerId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6328),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà sản xuất 2",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6328),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ManufacturerId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6329),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manufacturer 2",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6330),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ManufacturerId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6330),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà sản xuất 3",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6331),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ManufacturerId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6331),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manufacturer 3",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6332),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ManufacturerId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6332),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà sản xuất 4",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6333),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ManufacturerId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6334),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manufacturer 4",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "WebApp_TQ",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5577),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><path d='M3,16 L5,16 C5.55228475,16 6,15.5522847 6,15 C6,14.4477153 5.55228475,14 5,14 L3,14 L3,12 L5,12 C5.55228475,12 6,11.5522847 6,11 C6,10.4477153 5.55228475,10 5,10 L3,10 L3,8 L5,8 C5.55228475,8 6,7.55228475 6,7 C6,6.44771525 5.55228475,6 5,6 L3,6 L3,4 C3,3.44771525 3.44771525,3 4,3 L10,3 C10.5522847,3 11,3.44771525 11,4 L11,19 C11,19.5522847 10.5522847,20 10,20 L4,20 C3.44771525,20 3,19.5522847 3,19 L3,16 Z' fill='#000000' opacity='0.3'></path>		<path d='M16,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,15.2485298 C21,15.7329761 20.8241635,16.200956 20.5051534,16.565539 L17.8762883,19.5699562 C17.6944473,19.7777745 17.378566,19.7988332 17.1707477,19.6169922 C17.1540423,19.602375 17.1383289,19.5866616 17.1237117,19.5699562 L14.4948466,16.565539 C14.1758365,16.200956 14,15.7329761 14,15.2485298 L14,5 C14,3.8954305 14.8954305,3 16,3 Z' fill='#000000'></path>	</svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5577),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Index",
                            Code = "WebApp_TQ_TQ",
                            ControllerName = "Summary",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5579),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Home/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5579),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 1,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "Index",
                            Code = "WebApp_TQ_O",
                            ControllerName = "Order",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5581),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Order/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5581),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 1,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 4,
                            Code = "WebApp_HHDV",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5596),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'>	<path opacity='0.25' fill-rule='evenodd' clip-rule='evenodd' d='M11 4.25769C11 3.07501 9.9663 2.13515 8.84397 2.50814C4.86766 3.82961 2 7.57987 2 11.9999C2 13.6101 2.38057 15.1314 3.05667 16.4788C3.58731 17.5363 4.98303 17.6028 5.81966 16.7662L5.91302 16.6728C6.60358 15.9823 6.65613 14.9011 6.3341 13.9791C6.11766 13.3594 6 12.6934 6 11.9999C6 9.62064 7.38488 7.56483 9.39252 6.59458C10.2721 6.16952 11 5.36732 11 4.39046V4.25769ZM16.4787 20.9434C17.5362 20.4127 17.6027 19.017 16.7661 18.1804L16.6727 18.087C15.9822 17.3964 14.901 17.3439 13.979 17.6659C13.3594 17.8823 12.6934 17.9999 12 17.9999C11.3066 17.9999 10.6406 17.8823 10.021 17.6659C9.09899 17.3439 8.01784 17.3964 7.3273 18.087L7.23392 18.1804C6.39728 19.017 6.4638 20.4127 7.52133 20.9434C8.86866 21.6194 10.3899 21.9999 12 21.9999C13.6101 21.9999 15.1313 21.6194 16.4787 20.9434Z' fill='#12131A'></path>	<path fill-rule='evenodd' clip-rule='evenodd' d='M13 4.39046C13 5.36732 13.7279 6.16952 14.6075 6.59458C16.6151 7.56483 18 9.62064 18 11.9999C18 12.6934 17.8823 13.3594 17.6659 13.9791C17.3439 14.9011 17.3964 15.9823 18.087 16.6728L18.1803 16.7662C19.017 17.6028 20.4127 17.5363 20.9433 16.4788C21.6194 15.1314 22 13.6101 22 11.9999C22 7.57987 19.1323 3.82961 15.156 2.50814C14.0337 2.13515 13 3.07501 13 4.25769V4.39046Z' fill='#12131A'></path></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5596),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "Index",
                            Code = "WebApp_HHDV_HHDV",
                            ControllerName = "Product",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5597),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Product/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5597),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 4,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "Index",
                            Code = "WebApp_HHDV_NH",
                            ControllerName = "StockIn",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5599),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/StockIn/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5599),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 4,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Index",
                            Code = "WebApp_HHDV_W",
                            ControllerName = "Warehouse",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5600),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Warehouse/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5601),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 4,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 8,
                            Code = "WebApp_KH",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5602),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns = 'http://www.w3.org/2000/svg' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><path d = 'M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z' fill='#000000' fill-rule='nonzero' opacity='0.3'></path><path d = 'M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z' fill='#000000' fill-rule='nonzero'></path></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5602),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "Index",
                            Code = "WebApp_KH_KH",
                            ControllerName = "Customer",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5603),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Customer/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5604),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 8,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "Index",
                            Code = "WebApp_KH_NCC",
                            ControllerName = "Supplier",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5605),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Supplier/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5605),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 8,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 11,
                            ActionName = "Index",
                            Code = "WebApp_KH_NKH",
                            ControllerName = "CustomerType",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5607),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/CustomerType/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5607),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 8,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 12,
                            Code = "WebApp_TB",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5609),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>	<rect x='0' y='0' width='24' height='24'></rect>	<rect fill='#000000' opacity='0.3' x='2' y='5' width='20' height='14' rx='2'></rect>	<rect fill='#000000' x='2' y='8' width='20' height='3'></rect>	<rect fill='#000000' opacity='0.3' x='16' y='14' width='4' height='2' rx='1'></rect></g></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5609),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 13,
                            ActionName = "Index",
                            Code = "WebApp_TB_TQ",
                            ControllerName = "SummaryOfReceiptPayment",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5611),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/SummaryOfReceiptPayment/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5611),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 12,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 14,
                            ActionName = "Index",
                            Code = "WebApp_TB_PT",
                            ControllerName = "Receipt",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5612),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Receipt/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5613),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 12,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 15,
                            ActionName = "Index",
                            Code = "WebApp_TB_PC",
                            ControllerName = "Payment",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5614),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Payment/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5614),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 12,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 16,
                            ActionName = "Index",
                            Code = "WebApp_TB_SQ",
                            ControllerName = "CashBook",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5615),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/CashBook/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5616),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 12,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 17,
                            Code = "WebApp_BC",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5617),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>	<polygon points='0 0 24 0 24 24 0 24'></polygon>	<path d='M5.85714286,2 L13.7364114,2 C14.0910962,2 14.4343066,2.12568431 14.7051108,2.35473959 L19.4686994,6.3839416 C19.8056532,6.66894833 20,7.08787823 20,7.52920201 L20,20.0833333 C20,21.8738751 19.9795521,22 18.1428571,22 L5.85714286,22 C4.02044787,22 4,21.8738751 4,20.0833333 L4,3.91666667 C4,2.12612489 4.02044787,2 5.85714286,2 Z' fill='#000000' fill-rule='nonzero' opacity='0.3'></path>	<rect fill='#000000' x='6' y='11' width='9' height='2' rx='1'></rect>	<rect fill='#000000' x='6' y='15' width='5' height='2' rx='1'></rect></g></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5617),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 18,
                            Code = "WebApp_BC_DS",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5618),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/SaleReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5619),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 19,
                            ActionName = "Index",
                            Code = "WebApp_BC_HHDV",
                            ControllerName = "ProductReport",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5620),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ProductReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5620),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 20,
                            ActionName = "Index",
                            Code = "WebApp_BC_TK",
                            ControllerName = "StockReport",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5621),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/StockReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5622),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 21,
                            ActionName = "Index",
                            Code = "WebApp_BC_LN",
                            ControllerName = "ProfitReport",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5623),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ProfitReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5624),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 22,
                            ActionName = "Index",
                            Code = "WebApp_BC_LL",
                            ControllerName = "ProfitAndLossReport",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5625),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ProfitAndLossReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5625),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 23,
                            ActionName = "Index",
                            Code = "WebApp_BC_BCT",
                            ControllerName = "MonthlyReport",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5628),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/MonthlyReport/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5628),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 17,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 24,
                            Code = "WebApp_DM",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5630),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><rect x='0' y='0' width='24' height='24'></rect><rect fill='#000000' x='4' y='4' width='7' height='7' rx='1.5'></rect><path d='M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z' fill='#000000' opacity='0.3'></path></g></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5630),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 25,
                            ActionName = "Index",
                            Code = "WebApp_DM_NHH",
                            ControllerName = "ProductType",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5631),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ProductType/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5631),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 24,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 26,
                            ActionName = "Index",
                            Code = "WebApp_DM_DVT",
                            ControllerName = "Unit",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5633),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Unit/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5633),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 24,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 27,
                            Code = "WebApp_BHO",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5634),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-link'><span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><path d='M16,15.6315789 L16,12 C16,10.3431458 14.6568542,9 13,9 L6.16183229,9 L6.16183229,5.52631579 C6.16183229,4.13107011 7.29290239,3 8.68814808,3 L20.4776218,3 C21.8728674,3 23.0039375,4.13107011 23.0039375,5.52631579 L23.0039375,13.1052632 L23.0206157,17.786793 C23.0215995,18.0629336 22.7985408,18.2875874 22.5224001,18.2885711 C22.3891754,18.2890457 22.2612702,18.2363324 22.1670655,18.1421277 L19.6565168,15.6315789 L16,15.6315789 Z' fill='#000000'></path><path d='M1.98505595,18 L1.98505595,13 C1.98505595,11.8954305 2.88048645,11 3.98505595,11 L11.9850559,11 C13.0896254,11 13.9850559,11.8954305 13.9850559,13 L13.9850559,18 C13.9850559,19.1045695 13.0896254,20 11.9850559,20 L4.10078614,20 L2.85693427,21.1905292 C2.65744295,21.3814685 2.34093638,21.3745358 2.14999706,21.1750444 C2.06092565,21.0819836 2.01120804,20.958136 2.01120804,20.8293182 L2.01120804,18.32426 C1.99400175,18.2187196 1.98505595,18.1104045 1.98505595,18 Z M6.5,14 C6.22385763,14 6,14.2238576 6,14.5 C6,14.7761424 6.22385763,15 6.5,15 L11.5,15 C11.7761424,15 12,14.7761424 12,14.5 C12,14.2238576 11.7761424,14 11.5,14 L6.5,14 Z M9.5,16 C9.22385763,16 9,16.2238576 9,16.5 C9,16.7761424 9.22385763,17 9.5,17 L11.5,17 C11.7761424,17 12,16.7761424 12,16.5 C12,16.2238576 11.7761424,16 11.5,16 L9.5,16 Z' fill='#000000' opacity='0.3'></path></svg></span></span><span class='menu-title'>Chat</span><span class='menu-arrow'></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5635),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 28,
                            Code = "WebApp_NV",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5636),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns = 'http://www.w3.org/2000/svg' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><path d = 'M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z' fill='#000000' fill-rule='nonzero' opacity='0.3'></path><path d = 'M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z' fill='#000000' fill-rule='nonzero'></path></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5637),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 29,
                            ActionName = "Index",
                            Code = "WebApp_NV_BL",
                            ControllerName = "Payroll",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5638),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Payroll/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5638),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 28,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 30,
                            Code = "WebApp_CD",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5639),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'><path opacity='0.25' d='M2 6.5C2 4.01472 4.01472 2 6.5 2H17.5C19.9853 2 22 4.01472 22 6.5V6.5C22 8.98528 19.9853 11 17.5 11H6.5C4.01472 11 2 8.98528 2 6.5V6.5Z' fill='#12131A'></path><path d='M20 6.5C20 7.88071 18.8807 9 17.5 9C16.1193 9 15 7.88071 15 6.5C15 5.11929 16.1193 4 17.5 4C18.8807 4 20 5.11929 20 6.5Z' fill='#12131A'></path><path opacity='0.25' d='M2 17.5C2 15.0147 4.01472 13 6.5 13H17.5C19.9853 13 22 15.0147 22 17.5V17.5C22 19.9853 19.9853 22 17.5 22H6.5C4.01472 22 2 19.9853 2 17.5V17.5Z' fill='#12131A'></path><path d='M9 17.5C9 18.8807 7.88071 20 6.5 20C5.11929 20 4 18.8807 4 17.5C4 16.1193 5.11929 15 6.5 15C7.88071 15 9 16.1193 9 17.5Z' fill='#12131A'></path></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5639),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 31,
                            ActionName = "Index",
                            Code = "WebApp_CD_NV",
                            ControllerName = "Staff",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5641),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Staff/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5641),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 30,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 32,
                            ActionName = "Index",
                            Code = "WebApp_CD_PQ",
                            ControllerName = "AppRole",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5642),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/AppRole/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5642),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 30,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 33,
                            ActionName = "Index",
                            Code = "WebApp_CD_CH",
                            ControllerName = "Store",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5644),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Store/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5644),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 30,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 34,
                            ActionName = "Index",
                            Code = "WebApp_CD_MI",
                            ControllerName = "DocTemplate",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5645),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/DocTemplate/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5645),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 30,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 35,
                            Code = "WebApp_CD_DMHT",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5647),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5647),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 30,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 36,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_M",
                            ControllerName = "Menu",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5648),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Menu/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5648),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 35,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 37,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_LMI",
                            ControllerName = "DocTemplateType",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5649),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/DocTemplateType/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5650),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 35,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 38,
                            Code = "WebApp_QTW",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5651),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='svg-icon svg-icon-primary svg-icon-2x'><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo2/dist/../src/media/svg/icons/Devices/iMac.svg--><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'>    <g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>        <rect x='0' y='0' width='24' height='24'/>        <path d='M5,5 L5,16 L19,16 L19,5 L5,5 Z M5,3 L19,3 C20.4201608,3 21,3.7163444 21,4.6 L21,17.4 C21,18.2836556 20.4201608,19 19,19 L5,19 C3.57983921,19 3,18.2836556 3,17.4 L3,4.6 C3,3.7163444 3.57983921,3 5,3 Z M12,18 C12.2761424,18 12.5,17.7761424 12.5,17.5 C12.5,17.2238576 12.2761424,17 12,17 C11.7238576,17 11.5,17.2238576 11.5,17.5 C11.5,17.7761424 11.7238576,18 12,18 Z' fill='#12131A' fill-rule='nonzero'/>        <polygon fill='#12131A' opacity='0.3' points='5 5 5 16 19 16 19 5'/>        <rect fill='#12131A' opacity='0.3' x='10' y='20' width='4' height='1' rx='0.5'/>    </g></svg><!--end::Svg Icon--></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5651),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 11
                        },
                        new
                        {
                            Id = 39,
                            ActionName = "Index",
                            Code = "WebApp_QTW_P",
                            ControllerName = "Post",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5652),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Post/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5653),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 40,
                            ActionName = "Index",
                            Code = "WebApp_QTW_PT",
                            ControllerName = "PostType",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5654),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/PostType/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5654),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 41,
                            ActionName = "Index",
                            Code = "WebApp_QTW_S",
                            ControllerName = "Slider",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5655),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Slider/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5656),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 42,
                            ActionName = "Index",
                            Code = "WebApp_KH_NSX",
                            ControllerName = "Manufacturer",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5658),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Manufacturer/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5659),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 8,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 43,
                            ActionName = "Index",
                            Code = "WebApp_DM_TT",
                            ControllerName = "Attribute",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5660),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Attribute/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5660),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 24,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 44,
                            Code = "WebApp_CD_DMHT_STATUS",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5661),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5662),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 35,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 45,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_AUS",
                            ControllerName = "AppUserStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5663),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/AppUserStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5663),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 46,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_OS",
                            ControllerName = "AppUsOrderStatuserStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5664),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/OrderStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5665),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 47,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_PS",
                            ControllerName = "PhieuKeToanStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5666),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/PhieuKeToanStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5666),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 48,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_POSTS",
                            ControllerName = "PostStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5667),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/PostStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5668),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 49,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_POSTTYPES",
                            ControllerName = "PostTypeStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5669),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/PostTypeStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5669),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 50,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_PRODUCTTYPES",
                            ControllerName = "ProductTypeStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5670),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ProductTypeStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5671),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 51,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_STATUS_STS",
                            ControllerName = "StoreStatus",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5672),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/StoreStatus/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5672),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 44,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 52,
                            ActionName = "Index",
                            Code = "WebApp_DM_GTTT",
                            ControllerName = "AttributeValue",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5676),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/AttributeValue/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5678),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 24,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 53,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_P",
                            ControllerName = "PaperSize",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5679),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/PaperSize/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5679),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 35,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 54,
                            ActionName = "Index",
                            Code = "WebApp_CD_DMHT_AUT",
                            ControllerName = "AppUserType",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5680),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/AppUserType/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5681),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 35,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 55,
                            Code = "WebApp_BH",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5682),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'><path opacity='0.25' d='M2 6.5C2 4.01472 4.01472 2 6.5 2H17.5C19.9853 2 22 4.01472 22 6.5V6.5C22 8.98528 19.9853 11 17.5 11H6.5C4.01472 11 2 8.98528 2 6.5V6.5Z' fill='#12131A'></path><path d='M20 6.5C20 7.88071 18.8807 9 17.5 9C16.1193 9 15 7.88071 15 6.5C15 5.11929 16.1193 4 17.5 4C18.8807 4 20 5.11929 20 6.5Z' fill='#12131A'></path><path opacity='0.25' d='M2 17.5C2 15.0147 4.01472 13 6.5 13H17.5C19.9853 13 22 15.0147 22 17.5V17.5C22 19.9853 19.9853 22 17.5 22H6.5C4.01472 22 2 19.9853 2 17.5V17.5Z' fill='#12131A'></path><path d='M9 17.5C9 18.8807 7.88071 20 6.5 20C5.11929 20 4 18.8807 4 17.5C4 16.1193 5.11929 15 6.5 15C7.88071 15 9 16.1193 9 17.5Z' fill='#12131A'></path></svg></span></span>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5682),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 56,
                            ActionName = "Index",
                            Code = "WebApp_BH_P",
                            ControllerName = "Promotion",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5683),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Promotion/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5683),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 55,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 57,
                            ActionName = "Index",
                            Code = "WebApp_BH_CD",
                            ControllerName = "CommissionDiscount",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5685),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/CommissionDiscount/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5686),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 55,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 58,
                            ActionName = "Index",
                            Code = "WebApp_NV_BS",
                            ControllerName = "BasicSalary",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5687),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/BasicSalary/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5687),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 28,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 59,
                            ActionName = "Index",
                            Code = "WebApp_QTW_M",
                            ControllerName = "WebsiteMenu",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5688),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/WebsiteMenu/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5689),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 60,
                            ActionName = "Index",
                            Code = "WebApp_QTW_B",
                            ControllerName = "Booking",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5690),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Booking/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5690),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 61,
                            ActionName = "Index",
                            Code = "WebApp_QTW_C",
                            ControllerName = "Contact",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5691),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Contact/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5692),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 62,
                            ActionName = "Index",
                            Code = "WebApp_QTW_CI",
                            ControllerName = "ContactInformation",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5693),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/ContactInformation/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5694),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 63,
                            ActionName = "Index",
                            Code = "WebApp_QTW_N",
                            ControllerName = "Newsletter",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5695),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Newsletter/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5696),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 64,
                            ActionName = "Index",
                            Code = "WebApp_QTW_T",
                            ControllerName = "Testimonial",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5697),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Testimonial/Index",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5697),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 38,
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 65,
                            ActionName = "Print",
                            Code = "WebApp_HHDV_QRC",
                            ControllerName = "Product",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5698),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Product/Print",
                            MenuType = 0,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5699),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ParentId = 4,
                            SortOrder = 4
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.MenuAppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<byte>("MenuAppRoleType")
                        .HasColumnType("tinyint");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuAppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5981),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5981),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5983),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5983),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5984),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5985),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5985),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5986),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5987),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5987),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5988),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5988),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5989),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5989),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5990),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5990),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5991),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5991),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5992),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5993),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5993),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5994),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5994),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5995),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 13,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5996),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 5,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5996),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 14,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5997),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 5,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5997),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 15,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5998),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 5,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5998),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 16,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5999),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 6,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5999),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 17,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6000),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 6,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6000),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 18,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6001),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 6,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6001),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 19,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6002),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 7,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6003),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 20,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6003),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 7,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6004),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 21,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6004),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 7,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6005),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 22,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6006),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 8,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6007),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 23,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6007),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 8,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6008),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 24,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6008),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 8,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6009),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 25,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6010),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 9,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6010),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 26,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6011),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 9,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6011),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 27,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6012),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 9,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6012),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 28,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6013),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 10,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6013),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 29,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6014),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 10,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6015),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 30,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6015),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 10,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6016),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 31,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6022),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 11,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6022),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 32,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6023),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 11,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6023),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 33,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6024),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 11,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6024),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 34,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6025),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 12,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6026),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 35,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6026),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 12,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6027),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 36,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6027),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 12,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6028),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 37,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6029),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 13,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6029),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 38,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6030),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 13,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6030),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 39,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6031),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 13,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6031),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 40,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6032),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 14,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6032),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 41,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6033),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 14,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6033),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 42,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6034),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 14,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6035),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 43,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6036),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 15,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6037),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 44,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6037),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 15,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6038),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 45,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6038),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 15,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6039),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 46,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6040),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 16,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6040),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 47,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6041),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 16,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6041),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 48,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6042),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 16,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6042),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 49,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6043),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 17,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6043),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 50,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6044),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 17,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6045),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 51,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6045),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 17,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6046),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 52,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6046),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 18,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6047),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 53,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6048),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 18,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6048),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 54,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6049),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 18,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6049),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 55,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6050),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 19,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6050),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 56,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6051),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 19,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6051),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 57,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6052),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 19,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6053),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 58,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6053),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 20,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6054),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 59,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6054),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 20,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6055),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 60,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6056),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 20,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6056),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 61,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6057),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 21,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6057),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 62,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6058),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 21,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6058),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 63,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6059),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 21,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6059),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 64,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6061),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 22,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6061),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 65,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6062),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 22,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6062),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 66,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6063),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 22,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6063),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 67,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6064),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 23,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6065),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 68,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6065),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 23,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6066),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 69,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6066),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 23,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6067),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 70,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6067),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 24,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6068),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 71,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6069),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 24,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6069),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 72,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6070),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 24,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6070),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 73,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6071),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 25,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6071),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 74,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6072),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 25,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6072),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 75,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6073),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 25,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6073),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 76,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6074),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 26,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6075),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 77,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6075),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 26,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6076),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 78,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6076),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 26,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6077),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 79,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6078),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 27,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6078),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 80,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6079),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 27,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6079),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 81,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6080),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 27,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6080),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 82,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6081),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 28,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6081),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 83,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6082),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 28,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6082),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 84,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6084),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 28,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6084),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 85,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6085),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 29,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6085),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 86,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6086),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 29,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6087),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 87,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6087),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 29,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6088),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 88,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6093),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 30,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6094),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 89,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6096),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 30,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6096),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 90,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6097),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 30,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6097),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 91,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6098),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 31,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6099),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 92,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6099),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 31,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6100),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 93,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6100),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 31,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6101),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 94,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6101),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 32,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6102),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 95,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6103),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 32,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6103),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 96,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6104),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 32,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6104),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 97,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6105),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 33,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6105),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 98,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6106),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 33,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6107),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 99,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6107),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 33,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6108),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 100,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6108),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 34,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6109),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 101,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6110),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 34,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6110),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 102,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6111),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 34,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6111),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 103,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6112),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 35,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6112),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 104,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6114),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 35,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6114),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 105,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6115),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 35,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6115),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 106,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6116),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 36,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6117),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 107,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6117),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 36,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6118),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 108,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6118),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 36,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6119),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 109,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6120),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 37,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6120),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 110,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6121),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 37,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6121),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 111,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6122),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 37,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6122),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 112,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6123),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 38,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6123),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 113,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6125),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 38,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6125),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 114,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6126),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 38,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6127),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 115,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6127),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 39,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6128),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 116,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6128),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 39,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6129),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 117,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6130),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 39,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6130),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 118,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6131),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 40,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6131),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 119,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6133),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 40,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6134),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 120,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6135),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 40,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6135),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 121,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6136),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 41,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6136),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 122,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6137),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 41,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6137),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 123,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6138),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 41,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6138),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 124,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6139),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 42,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6140),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 125,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6140),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 42,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6141),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 126,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6142),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 42,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6143),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 127,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6145),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 43,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6145),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 128,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6146),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 43,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6146),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 129,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6147),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 43,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6148),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 130,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6148),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 44,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6149),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 131,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6149),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 44,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6150),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 132,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6151),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 44,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6151),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 133,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6152),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 45,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6152),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 134,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6153),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 45,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6153),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 135,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6154),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 45,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6154),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 136,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6155),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 46,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6155),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 137,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6156),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 46,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6157),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 138,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6158),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 46,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6159),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 139,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6160),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 47,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6160),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 140,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6161),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 47,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6161),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 141,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6162),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 47,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6162),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 142,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6163),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 48,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6163),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 143,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6164),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 48,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6165),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 144,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6168),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 48,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6169),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 145,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6170),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 49,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6170),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 146,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6172),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 49,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6172),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 147,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6174),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 49,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6174),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 148,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6175),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 50,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6175),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 149,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6176),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 50,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6177),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 150,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6177),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 50,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6178),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 151,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6178),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 51,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6179),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 152,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6179),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 51,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6180),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 153,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6181),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 51,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6181),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 154,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6182),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 52,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6182),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 155,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6183),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 52,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6183),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 156,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6184),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 52,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6184),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 157,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6185),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 53,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6185),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 158,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6186),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 53,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6187),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 159,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6187),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 53,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6188),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 160,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6188),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 54,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6189),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 161,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6190),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 54,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6190),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 162,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6191),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 54,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6191),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 163,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6192),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 55,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6192),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 164,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6193),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 55,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6193),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 165,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6194),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 55,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6194),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 166,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6195),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 56,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6196),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 167,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6196),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 56,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6197),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 168,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6198),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 56,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6199),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 169,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6199),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 57,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6200),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 170,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6200),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 57,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6201),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 171,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6205),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 57,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6205),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 172,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6207),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 58,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6207),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 173,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6208),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 58,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6208),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 174,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6210),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 58,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6210),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 175,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6211),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 59,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6211),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 176,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6212),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 59,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6212),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 177,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6213),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 59,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6214),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 178,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6214),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 60,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6215),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 179,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6215),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 60,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6216),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 180,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6217),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 60,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6217),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 181,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6218),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 61,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6218),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 182,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6219),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 61,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6219),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 183,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6220),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 61,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6220),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 184,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6221),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 62,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6221),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 185,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6222),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 62,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6223),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 186,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6223),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 62,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6224),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 187,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6224),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 63,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6225),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 188,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6226),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 63,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6227),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 189,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6227),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 63,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6228),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 190,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6229),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 64,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6229),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 191,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6230),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 64,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6230),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 192,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6231),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 64,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6232),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 193,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6232),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)0,
                            MenuId = 65,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6233),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 194,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6233),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)1,
                            MenuId = 65,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6234),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 195,
                            AppRoleId = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6235),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsAllow = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            MenuAppRoleType = (byte)2,
                            MenuId = 65,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6235),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.MenuTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5740),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5740),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tổng quan",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5742),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5742),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dashboard",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5743),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5743),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tổng quan",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5744),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5745),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Summary",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5746),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5746),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đơn hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5747),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5747),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Orders",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5748),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5749),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa & Dịch vụ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5749),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 4,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5750),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Products & Services",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5752),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 5,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5752),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa/Dịch vụ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5753),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 5,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5753),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Products/Services",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5754),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 6,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5755),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhập hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5755),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 6,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5756),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Stock in",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5757),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 7,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5757),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Kho hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5758),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 7,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5758),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Warehouses",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5760),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 8,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5761),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khách hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5762),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 8,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5762),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Customers",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5763),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 9,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5763),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khách hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5764),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 9,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5765),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Customers",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5765),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 10,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5766),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà cung cấp",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5770),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 10,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5771),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Suppliers",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5772),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 11,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5773),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhóm khách hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5773),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 11,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5774),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Customer types",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5775),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 12,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5775),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tiền bạc",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5776),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 12,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5776),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Receipts & payments",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5777),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 13,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5778),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tổng quan",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5779),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 13,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5779),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Summary",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5780),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 14,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5780),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Thu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5782),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 14,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5782),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Receipts",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5783),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 15,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5783),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chi",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5784),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 15,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5785),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Payments",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5786),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 16,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5786),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sổ quỹ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5787),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 16,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5788),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cash book",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5788),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 17,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5789),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Báo cáo",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5791),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 17,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5791),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Reports",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5792),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 18,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5792),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Doanh số",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5793),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 18,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5794),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sales",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5795),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 19,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5795),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa & Dịch vụ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5796),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 19,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5796),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Products & Services",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5797),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 20,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5798),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tồn kho",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5798),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 20,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5799),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Stock",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5800),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 21,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5800),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lợi nhuận",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5801),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 21,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5801),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Profit",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5802),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 22,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5803),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lãi lỗ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5804),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 22,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5805),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Profit & Loss",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5806),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 23,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5806),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Báo cáo tháng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5807),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 23,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5807),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Monthly report",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5808),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 24,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5809),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Danh mục",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5810),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 24,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5810),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Directories",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5811),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 25,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5812),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhóm hàng hóa",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5813),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 25,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5814),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Product types",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5815),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 26,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5815),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đơn vị tính",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5816),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 26,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5816),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Units",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5817),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 27,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5818),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Bán hàng Online",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5819),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 27,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5819),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sale Online",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5820),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 28,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5821),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5821),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 28,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5822),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Staff",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5823),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 29,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5823),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Bảng lương",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5825),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 29,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5825),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Payroll",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5826),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 30,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5826),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cài đặt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5827),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 30,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5828),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Setting",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5828),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 31,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5829),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân viên",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5830),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 31,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5831),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Staffs",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5832),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 32,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5832),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phân quyền",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5833),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 32,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5834),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Roles",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5834),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 33,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5836),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cửa hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5837),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 33,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5837),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Stores",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5838),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 34,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5838),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Mẫu in",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5839),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 34,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5840),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Document templates",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5841),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 35,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5842),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Danh mục hệ thống",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5842),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 35,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5843),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "System directories",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5844),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 36,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5844),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5845),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 36,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5845),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5846),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 37,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5846),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Loại mẫu in",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5847),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 37,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5848),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Document printing template type",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5848),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 38,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5849),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Website",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5850),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 38,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5851),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Website",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5852),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 39,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5852),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Bài viết",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 78,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5853),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 39,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5854),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Post",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 79,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5855),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 40,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5855),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chuyên mục",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 80,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5856),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 40,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5857),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Categories",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 81,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5858),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 41,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5858),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Slider",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 82,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5859),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 41,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5860),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Slider",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 83,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5861),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 42,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5862),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhà sản xuất",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 84,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5866),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 42,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5867),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manufacturer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 85,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5868),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 43,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5868),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Thuộc tính sản phẩm",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 86,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5869),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 43,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5869),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Attribute",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 87,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5870),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 44,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5871),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 88,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5872),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 44,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5872),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 89,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5873),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 45,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5873),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái người sử dụng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 90,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5874),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 45,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5874),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "User status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 91,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5875),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 46,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5875),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái đơn hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 92,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5876),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 46,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5877),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Order status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 93,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5878),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 47,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5878),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái phiếu kế toán",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 94,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5879),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 47,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5879),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phiếu kế toán status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 95,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5880),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 48,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5881),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái bài viết",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 96,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5881),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 48,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5882),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Post status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 97,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5883),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 49,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5883),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái loại bài viết",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 98,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5884),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 49,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5884),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Post type status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5885),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 50,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5886),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái slide",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 100,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5886),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 50,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5887),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Slide status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 101,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5888),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 51,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5888),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Trạng thái cửa hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 102,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5889),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 51,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5889),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Store status",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 103,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5890),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 52,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5890),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Giá trị thuộc tính",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 104,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5892),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 52,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5892),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Attribute value",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 105,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5893),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 53,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5893),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khổ giấy",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 106,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5894),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 53,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5894),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Paper size",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 107,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5895),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 54,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5896),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Loại người sử dụng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 108,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5897),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 54,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5897),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "App user type",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 109,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5898),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 55,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5898),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Bán hàng",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 110,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5899),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 55,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5899),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sales",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 111,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5900),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 56,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5901),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chương trình khuyến mãi",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 112,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5901),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 56,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5902),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Sales Promotion",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 113,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5903),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 57,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5903),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hoa hồng - Giảm giá",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 114,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5904),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 57,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5904),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Commission - Discount",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 115,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5905),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 58,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5905),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lương căn bản",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 116,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5907),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 58,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5907),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Basic salary",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 117,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5908),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 59,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5909),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 118,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5909),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 59,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5910),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menu",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 119,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5911),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 60,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5912),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đặt lịch",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 120,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5913),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 60,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5913),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Booking",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 121,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5914),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 61,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5915),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Liên hệ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 122,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5916),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 61,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5916),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Contact",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 123,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5917),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 62,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5917),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Thông tin liên hệ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 124,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5918),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 62,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5918),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Contact information",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 125,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5919),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 63,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5920),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Newsletter",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 126,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5920),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 63,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5921),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Newsletter",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 127,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5922),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 64,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5923),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Testimonial",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 128,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5923),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 64,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5924),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Testimonial",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 129,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5925),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            MenuId = 65,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5925),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "In mã QR",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 130,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5926),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            MenuId = 65,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5926),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Print QR code",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Newsletters", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InProgress",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(447),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(448),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Confirmed",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(450),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(450),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "Shipping",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(451),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(451),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "Success",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(452),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(453),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "Canceled",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(454),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(454),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.OrderStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("OrderStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(474),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(474),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InProgress",
                            OrderStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(475),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(476),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InProgress",
                            OrderStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(477),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(477),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Confirmed",
                            OrderStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(478),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(478),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Confirmed",
                            OrderStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(479),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(480),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shipping",
                            OrderStatusId = 3,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(481),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(481),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shipping",
                            OrderStatusId = 3,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(482),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(482),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Success",
                            OrderStatusId = 4,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(483),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(483),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Success",
                            OrderStatusId = 4,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(485),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(485),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Canceled",
                            OrderStatusId = 5,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(486),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(487),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Canceled",
                            OrderStatusId = 5,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PaperSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PaperSizes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6525),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6526),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "58 mm",
                            SortOrder = 0,
                            Value = 5.7999999999999998
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6527),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6527),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "80 mm",
                            SortOrder = 0,
                            Value = 8.0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6530),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6530),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "A5",
                            SortOrder = 0,
                            Value = 21.0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6531),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6531),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "A4",
                            SortOrder = 0,
                            Value = 21.0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Payrolls", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PayrollDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayrollId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PayrollId");

                    b.ToTable("PayrollDetails", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PayrollTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayrollId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PayrollId");

                    b.ToTable("PayrollTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PetServiceSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PetServiceSelections", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PetServiceSelectionTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetServiceSelectionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PetServiceSelectionId");

                    b.ToTable("PetServiceSelectionTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiPhieuKeToan")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MoneyAffterTax")
                        .HasColumnType("float");

                    b.Property<double>("MoneyBeforeTax")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<double>("PercentDiscount")
                        .HasColumnType("float");

                    b.Property<int?>("PhieuKeToanStatusId")
                        .HasColumnType("int");

                    b.Property<Guid?>("SaleStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<double>("TotalBuyingPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalCommission")
                        .HasColumnType("float");

                    b.Property<double>("TotalDebt")
                        .HasColumnType("float");

                    b.Property<double>("TotalDiscount")
                        .HasColumnType("float");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalPaid")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PhieuKeToanStatusId");

                    b.HasIndex("SaleStaffId");

                    b.HasIndex("StoreId");

                    b.ToTable("PhieuKeToans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PX2021/1",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7305),
                            CreatedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            CustomerId = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3494"),
                            Date = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7322),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LoaiPhieuKeToan = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7305),
                            ModifiedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            MoneyAffterTax = 0.0,
                            MoneyBeforeTax = 0.0,
                            PaymentMethod = 0,
                            PercentDiscount = 0.0,
                            SaleStaffId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            SortOrder = 0,
                            StoreId = 1,
                            TotalBuyingPrice = 0.0,
                            TotalCommission = 0.0,
                            TotalDebt = 0.0,
                            TotalDiscount = 0.0,
                            TotalMoney = 1050000.0,
                            TotalPaid = 1050000.0
                        },
                        new
                        {
                            Id = 2,
                            Code = "PX2021/2",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7325),
                            CreatedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            CustomerId = new Guid("0227bc9a-ed2f-4617-e96b-08d9704a3494"),
                            Date = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7328),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LoaiPhieuKeToan = 3,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7326),
                            ModifiedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            MoneyAffterTax = 0.0,
                            MoneyBeforeTax = 0.0,
                            PaymentMethod = 0,
                            PercentDiscount = 0.0,
                            SaleStaffId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            SortOrder = 0,
                            StoreId = 1,
                            TotalBuyingPrice = 0.0,
                            TotalCommission = 0.0,
                            TotalDebt = 0.0,
                            TotalDiscount = 0.0,
                            TotalMoney = 6500000.0,
                            TotalPaid = 6500000.0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("BuyingPrice")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("ImportPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhieuKeToanId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductSKUId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PhieuKeToanId");

                    b.HasIndex("ProductSKUId");

                    b.ToTable("PhieuKeToanChiTiets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyingPrice = 1050000.0,
                            Commission = 0.0,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7346),
                            CreatedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            Discount = 0.0,
                            ImportPrice = 0.0,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7346),
                            ModifiedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            PhieuKeToanId = 1,
                            Price = 1050000.0,
                            ProductSKUId = 1,
                            Qty = -1,
                            SortOrder = 0,
                            TotalPrice = 1050000.0
                        },
                        new
                        {
                            Id = 2,
                            BuyingPrice = 6500000.0,
                            Commission = 0.0,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7350),
                            CreatedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            Discount = 0.0,
                            ImportPrice = 0.0,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7350),
                            ModifiedUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            PhieuKeToanId = 2,
                            Price = 6500000.0,
                            ProductSKUId = 2,
                            Qty = -1,
                            SortOrder = 0,
                            TotalPrice = 6500000.0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanChiTiet_AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhieuKeToanChiTietId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PhieuKeToanChiTietId");

                    b.ToTable("PhieuKeToanChiTiet_AppUsers", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PhieuKeToanStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InActive",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(664),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(664),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(665),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(666),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PhieuKeToanStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PhieuKeToanStatusId");

                    b.ToTable("PhieuKeToanStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(802),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(803),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chưa kích hoạt",
                            PhieuKeToanStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(804),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(805),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InActive",
                            PhieuKeToanStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(806),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(806),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            PhieuKeToanStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(807),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(808),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            PhieuKeToanStatusId = 2,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PostTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostStatusId");

                    b.HasIndex("PostTypeId");

                    b.ToTable("Posts", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostImages", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InActive",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(506),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(506),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(507),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(508),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PostStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PostStatusId");

                    b.ToTable("PostStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(523),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(523),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chưa kích hoạt",
                            PostStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(524),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(525),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InActive",
                            PostStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(526),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(526),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            PostStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(527),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(528),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            PostStatusId = 2,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PostId");

                    b.ToTable("PostTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PostTypeStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostTypeStatusId");

                    b.ToTable("PostTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CNTT",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(542),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(543),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "CNSH",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(544),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(544),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostTypeStatuses", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PostTypeStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LanguageId1");

                    b.HasIndex("PostTypeStatusId");

                    b.ToTable("PostTypeStatusTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PostTypeId");

                    b.ToTable("PostTypeTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(562),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(562),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Công nghệ thông tin",
                            PostTypeId = 1,
                            SeoAlias = "cong-nghe-thong-tin",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(564),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(564),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "It",
                            PostTypeId = 1,
                            SeoAlias = "it",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(565),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(566),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Công nghệ sinh học",
                            PostTypeId = 2,
                            SeoAlias = "cong-nghe-sinh-hoc",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(566),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(567),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Biotechnology",
                            PostTypeId = 2,
                            SeoAlias = "biotechnology",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("AllowSellWhenNotEnough")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InventoryWarning")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasSKU")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPOS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeb")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufactuerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ManufactuerId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowSellWhenNotEnough = true,
                            Code = "SP0000001",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7185),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            InventoryWarning = 0,
                            IsDefault = false,
                            IsDeleted = false,
                            IsHasSKU = true,
                            IsPOS = true,
                            IsVisibled = true,
                            IsWeb = true,
                            ManufactuerId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7182),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OriginalPrice = 100000m,
                            Price = 200000m,
                            ProductTitle = "Hàng hóa 1",
                            SortOrder = 0,
                            Stock = 0,
                            Url = "hang-hoa-1",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            AllowSellWhenNotEnough = true,
                            Code = "SP0000002",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7197),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            InventoryWarning = 0,
                            IsDefault = false,
                            IsDeleted = false,
                            IsHasSKU = true,
                            IsPOS = true,
                            IsVisibled = true,
                            IsWeb = true,
                            ManufactuerId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7196),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OriginalPrice = 3000000m,
                            Price = 6500000m,
                            ProductTitle = "Dịch vụ 2",
                            SortOrder = 0,
                            Stock = 0,
                            Url = "dich-vu-2",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductInProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductTypeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInProductTypes", (string)null);

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            ProductTypeId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductSKU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("BuyingPrice")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QtyInStock")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSKUs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyingPrice = 1050000.0,
                            Code = "SP0000001",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7253),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7254),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa 1",
                            Price = 650000.0,
                            ProductId = 1,
                            QtyInStock = 10,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            BuyingPrice = 1050000.0,
                            Code = "SP0000002",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7255),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7256),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dịch vụ_1kg",
                            Price = 650000.0,
                            ProductId = 2,
                            QtyInStock = 10,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            BuyingPrice = 1050000.0,
                            Code = "SP0000003",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7260),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7261),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dịch vụ_2kg",
                            Price = 650000.0,
                            ProductId = 2,
                            QtyInStock = 10,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductSKU_AttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributeValueId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSKUId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeValueId");

                    b.HasIndex("ProductSKUId");

                    b.ToTable("ProductSKU_AttributeValues", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeValueId = 1,
                            ProductSKUId = 2
                        },
                        new
                        {
                            Id = 2,
                            AttributeValueId = 2,
                            ProductSKUId = 3
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Details")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7215),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Hàng hóa 1",
                            Details = "Hàng hóa 1",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7215),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa 1",
                            ProductId = 1,
                            SeoAlias = "hang-hoa-1",
                            SeoDescription = "Hàng hóa 1",
                            SeoTitle = "Hàng hóa 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7217),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Product 1",
                            Details = "Product 1",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7217),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Product 1",
                            ProductId = 1,
                            SeoAlias = "product-1",
                            SeoDescription = "Product 1",
                            SeoTitle = "Product 1",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7219),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Dịch vụ 2",
                            Details = "Dịch vụ 2",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7219),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dịch vụ 2",
                            ProductId = 2,
                            SeoAlias = "dich-vu-2",
                            SeoDescription = "Dịch vụ 2",
                            SeoTitle = "Dịch vụ 2",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7221),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Service 2",
                            Details = "Service 2",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7221),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Service 2",
                            ProductId = 2,
                            SeoAlias = "service-2",
                            SeoDescription = "Service 2",
                            SeoTitle = "Service 2",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowOnHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeStatusId");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(895),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsShowOnHome = true,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(895),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductTypeStatusId = 2,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(896),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsShowOnHome = true,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(897),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ProductTypeStatusId = 2,
                            SortOrder = 2
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductTypeStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InActive",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(582),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(583),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(584),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(584),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductTypeStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductTypeStatusId");

                    b.ToTable("ProductTypeStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(599),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(599),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chưa kích hoạt",
                            ProductTypeStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(600),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(601),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InActive",
                            ProductTypeStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(602),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(602),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            ProductTypeStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(603),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(603),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            ProductTypeStatusId = 2,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductTypeTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(909),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(909),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hàng hóa",
                            ProductTypeId = 1,
                            SeoAlias = "hang-hoa",
                            SeoDescription = "Hàng hóa bán được",
                            SeoTitle = "Hàng hóa bán được",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(911),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(911),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Product",
                            ProductTypeId = 1,
                            SeoAlias = "product",
                            SeoDescription = "product",
                            SeoTitle = "product",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(913),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(913),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dịch vụ",
                            ProductTypeId = 2,
                            SeoAlias = "dich-vu",
                            SeoDescription = "Dịch vụ",
                            SeoTitle = "Dịch vụ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(914),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(914),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Service",
                            ProductTypeId = 2,
                            SeoAlias = "service",
                            SeoDescription = "service",
                            SeoTitle = "service",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "001",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7115),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7116),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7116),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "002",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7118),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            FromDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7119),
                            IsApply = true,
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7118),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion_CommissionDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommissionDiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommissionDiscountId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Promotion_CommissionDiscounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommissionDiscountId = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7159),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7159),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PromotionId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CommissionDiscountId = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7160),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7161),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PromotionId = 1,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion_ProductSKU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductSKUId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductSKUId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Promotion_ProductSKUs", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PromotionTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7136),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7136),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Ưu đãi nhân viên",
                            PromotionId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7137),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7138),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            PromotionId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7138),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7139),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chương trình trung thu",
                            PromotionId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7140),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(7140),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "N/A",
                            PromotionId = 2,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SlideStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SlideStatusId");

                    b.ToTable("Slides", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5333),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Image = "smart_farming.jpg",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "#",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5334),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5337),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Image = "biotechnology.jpg",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "#",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5338),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SlideStatusId = 2,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5339),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Image = "information_technology.png",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "#",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5339),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SlideStatusId = 2,
                            SortOrder = 3
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SlideStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "InActive",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(857),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(858),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(858),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(859),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SlideStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SlideStatusId");

                    b.ToTable("SlideStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(872),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(873),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chưa kích hoạt",
                            SlideStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(877),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(878),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "InActive",
                            SlideStatusId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(879),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(880),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            SlideStatusId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(881),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(881),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            SlideStatusId = 2,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SlideId");

                    b.ToTable("SlideTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Nông nghiệp thông minh",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5390),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>Nền nông nghiệp ứng dụng công nghệ cao(cơ giới hóa, tự động hóa…)</p><p>Công nghệ sản xuất, bảo quản sản phẩm an toàn (hữu cơ, theo GAP…)</p><p>Công nghệ quản lý, nhận diện sản phẩm theo chuỗi giá trị… gắn với hệ thống trí tuệ nhân tạo (công nghệ thông tin).</p>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5390),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Smart farming",
                            SlideId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Smart farm",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5394),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>Nền nông nghiệp ứng dụng công nghệ cao(cơ giới hóa, tự động hóa…)</p><p>Công nghệ sản xuất, bảo quản sản phẩm an toàn (hữu cơ, theo GAP…)</p><p>Công nghệ quản lý, nhận diện sản phẩm theo chuỗi giá trị… gắn với hệ thống trí tuệ nhân tạo (công nghệ thông tin).</p>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5394),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Smart farming",
                            SlideId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "Công nghệ sinh học",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5396),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>Ứng dụng công nghệ sinh học trong sản xuất thuốc, thức ăn</p><p> Điều chế và sản xuất hóa chất công nghiệp; phát triển giống cây trồng, vật nuôi</p><p> Ứng dụng công nghệ di truyền, xét nghiệm trong y khoa </p><p> giải quyết các vấn đề môi trường…</p>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5396),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Biotechnology",
                            SlideId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "Công nghệ sinh học",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5398),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>Ứng dụng công nghệ sinh học trong sản xuất thuốc, thức ăn</p><p> Điều chế và sản xuất hóa chất công nghiệp; phát triển giống cây trồng, vật nuôi</p><p> Ứng dụng công nghệ di truyền, xét nghiệm trong y khoa </p><p> giải quyết các vấn đề môi trường…</p>",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5398),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Biotechnology",
                            SlideId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "Công nghệ thông tin và truyền thông",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5400),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>ICT là sự kết hợp của công nghệ thông tin và công nghệ truyền thông</p><p> để tạo nên sự kết nối và chia sẻ thông tin với nhiều hình thức khác nhau </p><p> nhằm hỗ trợ và thúc đẩy năng lực sản xuất, kinh doanh Doanh nghiệp </p> ",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5400),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "IT",
                            SlideId = 3,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            Code = "Công nghệ thông tin và truyền thông",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5401),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "<p>ICT là sự kết hợp của công nghệ thông tin và công nghệ truyền thông</p><p> để tạo nên sự kết nối và chia sẻ thông tin với nhiều hình thức khác nhau </p><p> nhằm hỗ trợ và thúc đẩy năng lực sản xuất, kinh doanh Doanh nghiệp </p> ",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5402),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "IT",
                            SlideId = 3,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SoDuDauKyHangHoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductSKUId")
                        .HasColumnType("int");

                    b.Property<int>("QtyInStock")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductSKUId");

                    b.HasIndex("StoreId");

                    b.ToTable("SoDuDauKyHangHoas", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SoDuDauKySoQuy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("SoDuDauKySoQuys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6637),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6638),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0,
                            StoreId = 1,
                            Total = 2000000f,
                            Year = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Taxcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreStatusId");

                    b.ToTable("Stores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CH001",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5438),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "abc@gmail.com",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5439),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Phone = "0123456789",
                            SortOrder = 0,
                            StoreStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "CH002",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5441),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "abc@gmail.com",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5441),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Phone = "0123456789",
                            SortOrder = 0,
                            StoreStatusId = 1
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StoreStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Active",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(619),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(619),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "Repair",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(620),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(620),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "TemporarilyClosed",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(621),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(622),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "Closed",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(623),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(623),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("StoreStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StoreStatusId");

                    b.ToTable("StoreStatusTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(635),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(636),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang hoạt động",
                            SortOrder = 0,
                            StoreStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(637),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(637),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Active",
                            SortOrder = 0,
                            StoreStatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(639),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(639),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đang sữa chửa",
                            SortOrder = 0,
                            StoreStatusId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(640),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(640),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Repair",
                            SortOrder = 0,
                            StoreStatusId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(641),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(642),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tạm thời đóng cửa",
                            SortOrder = 0,
                            StoreStatusId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(643),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(643),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "TemporarilyClosed",
                            SortOrder = 0,
                            StoreStatusId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(644),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(644),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đã đóng cửa",
                            SortOrder = 0,
                            StoreStatusId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(645),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 146, DateTimeKind.Local).AddTicks(646),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Closed",
                            SortOrder = 0,
                            StoreStatusId = 4
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5477),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5478),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cửa hàng mặc định",
                            SortOrder = 0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5479),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5479),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Default Store",
                            SortOrder = 0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5480),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5481),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Cửa hàng 2",
                            SortOrder = 0,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5486),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(5496),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Store 2",
                            SortOrder = 0,
                            StoreId = 2
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Testimonials", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Le Quang Teo",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6846),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "",
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6847),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "It's Amazing",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("ExternalTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Units", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.UnitTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitTranslations", (string)null);
                });

            modelBuilder.Entity("SnailApp.Data.Entities.WebsiteMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteMenuType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WebsiteMenus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AboutUs",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6739),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/about-us",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6739),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 1,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "Pets",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6742),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Pets/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6742),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 2,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "Shop",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6744),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Shop/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6744),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 3,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "Services",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6745),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Services/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6745),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 4,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "Blogs",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6746),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Blog/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6747),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 5,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "Contact",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6748),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Contact/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6748),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 6,
                            WebsiteMenuType = 1
                        },
                        new
                        {
                            Id = 7,
                            Code = "PetMart",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6749),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Shop/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6749),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 1,
                            WebsiteMenuType = 2
                        },
                        new
                        {
                            Id = 8,
                            Code = "Chinovet",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6750),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Vet/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6751),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 2,
                            WebsiteMenuType = 2
                        },
                        new
                        {
                            Id = 9,
                            Code = "ChinoSalon",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6752),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Salon/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6752),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 3,
                            WebsiteMenuType = 2
                        },
                        new
                        {
                            Id = 10,
                            Code = "ChinoHotel",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6753),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Hotel/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6753),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 4,
                            WebsiteMenuType = 2
                        },
                        new
                        {
                            Id = 11,
                            Code = "Training",
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6755),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            Link = "/Training/Index",
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6756),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SortOrder = 5,
                            WebsiteMenuType = 2
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.WebsiteMenuTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibled")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("WebsiteMenuId");

                    b.ToTable("WebsiteMenuTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6775),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6776),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "About us",
                            SortOrder = 0,
                            WebsiteMenuId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6777),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6777),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "About us",
                            SortOrder = 0,
                            WebsiteMenuId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6778),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6779),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Pets",
                            SortOrder = 0,
                            WebsiteMenuId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6780),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6781),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Pets",
                            SortOrder = 0,
                            WebsiteMenuId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6781),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6782),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shop",
                            SortOrder = 0,
                            WebsiteMenuId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6783),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6783),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shop",
                            SortOrder = 0,
                            WebsiteMenuId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6784),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6784),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Services",
                            SortOrder = 0,
                            WebsiteMenuId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6785),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6786),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Services",
                            SortOrder = 0,
                            WebsiteMenuId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6786),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6787),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Blogs",
                            SortOrder = 0,
                            WebsiteMenuId = 5
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6788),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6788),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Blogs",
                            SortOrder = 0,
                            WebsiteMenuId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6789),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6789),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Contact",
                            SortOrder = 0,
                            WebsiteMenuId = 6
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6790),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6790),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Contact",
                            SortOrder = 0,
                            WebsiteMenuId = 6
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6791),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6792),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Pet Mart",
                            SortOrder = 0,
                            WebsiteMenuId = 7
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6792),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6793),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Pet Mart",
                            SortOrder = 0,
                            WebsiteMenuId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6794),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6794),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Vet",
                            SortOrder = 0,
                            WebsiteMenuId = 8
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6795),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6795),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Vet",
                            SortOrder = 0,
                            WebsiteMenuId = 8
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6796),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6797),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Salon",
                            SortOrder = 0,
                            WebsiteMenuId = 9
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6798),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6798),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Salon",
                            SortOrder = 0,
                            WebsiteMenuId = 9
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6799),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6799),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Hotel",
                            SortOrder = 0,
                            WebsiteMenuId = 10
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6800),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6800),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Chino Hotel",
                            SortOrder = 0,
                            WebsiteMenuId = 10
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6801),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 1,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6802),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Training",
                            SortOrder = 0,
                            WebsiteMenuId = 11
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6802),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDefault = false,
                            IsDeleted = false,
                            IsVisibled = true,
                            LanguageId = 2,
                            ModifiedDate = new DateTime(2022, 1, 2, 12, 54, 50, 163, DateTimeKind.Local).AddTicks(6803),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Training",
                            SortOrder = 0,
                            WebsiteMenuId = 11
                        });
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AboutTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.About", "About")
                        .WithMany("AboutTranslations")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AboutTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("About");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppRoleTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppRole", "AppRole")
                        .WithMany("AppRoleTranslations")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AppRoleTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUserStatus", "AppUserStatus")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppUserStatusId");

                    b.HasOne("SnailApp.Data.Entities.Country", "Country")
                        .WithMany("AppUsers")
                        .HasForeignKey("CountryId");

                    b.HasOne("SnailApp.Data.Entities.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId");

                    b.HasOne("SnailApp.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.Navigation("AppUserStatus");

                    b.Navigation("Country");

                    b.Navigation("CustomerType");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_AppUserType", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUser_AppUserTypes")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.AppUserType", "AppUserType")
                        .WithMany("AppUser_AppUserTypes")
                        .HasForeignKey("AppUserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_BasicSalary", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUser_BasicSalarys")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.BasicSalary", "BasicSalary")
                        .WithMany("AppUser_BasicSalarys")
                        .HasForeignKey("BasicSalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("BasicSalary");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_CommissionDiscount", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUser_CommissionDiscounts")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.CommissionDiscount", "CommissionDiscount")
                        .WithMany("AppUser_CommissionDiscounts")
                        .HasForeignKey("CommissionDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("CommissionDiscount");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser_Promotion", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUser_Promotions")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Promotion", "Promotion")
                        .WithMany("AppUser_Promotions")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserFeedback", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUserFeedbacks")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserHelp", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppUserHelps")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUserStatus", "AppUserStatus")
                        .WithMany("AppUserStatusTranslations")
                        .HasForeignKey("AppUserStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AppUserStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUserStatus");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserTypeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUserType", "AppUserType")
                        .WithMany("AppUserTypeTranslations")
                        .HasForeignKey("AppUserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AppUserTypeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUserType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Attribute", "Attribute")
                        .WithMany("AttributeTranslations")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AttributeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeValue", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Attribute", "Attribute")
                        .WithMany("AttributeValues")
                        .HasForeignKey("AttributeId");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeValueTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AttributeValue", "AttributeValue")
                        .WithMany("AttributeValueTranslations")
                        .HasForeignKey("AttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("AttributeValueTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeValue");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.BasicSalaryTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.BasicSalary", "BasicSalary")
                        .WithMany("BasicSalaryTranslations")
                        .HasForeignKey("BasicSalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("BasicSalaryTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicSalary");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Booking", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.PetServiceSelection", "PetServiceSelection")
                        .WithMany("Bookings")
                        .HasForeignKey("PetServiceSelectionId");

                    b.Navigation("PetServiceSelection");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Cart", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CommissionDiscountTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.CommissionDiscount", "CommissionDiscount")
                        .WithMany("CommissionDiscountTranslations")
                        .HasForeignKey("CommissionDiscountId");

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("CommissionDiscountTranslations")
                        .HasForeignKey("LanguageId");

                    b.Navigation("CommissionDiscount");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CustomerTypeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.CustomerType", "CustomerType")
                        .WithMany("CustomerTypeTranslations")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("CustomerTypeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplate", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.DocTemplateType", "DocTemplateType")
                        .WithMany("DocTemplates")
                        .HasForeignKey("DocTemplateTypeId");

                    b.HasOne("SnailApp.Data.Entities.PaperSize", "PaperSize")
                        .WithMany("DocTemplates")
                        .HasForeignKey("PaperSizeId");

                    b.Navigation("DocTemplateType");

                    b.Navigation("PaperSize");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplateTypeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.DocTemplateType", "DocTemplateType")
                        .WithMany("DocTemplateTypeTranslations")
                        .HasForeignKey("DocTemplateTypeId");

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("DocTemplateTypeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocTemplateType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.FavoriteProduct", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("FavoriteProducts")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("FavoriteProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.GenderTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Gender", "Gender")
                        .WithMany("GenderTranslations")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("GenderTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ManufacturerTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("ManufactuerTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Manufacturer", "Manufacturer")
                        .WithMany("ManufacturerTranslations")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.MenuAppRole", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppRole", "AppRole")
                        .WithMany("MenuRoles")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.MenuTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("MenuTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Menu", "Menu")
                        .WithMany("MenuTranslations")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.OrderStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("OrderStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.OrderStatus", "OrderStatus")
                        .WithMany("OrderStatusTranslations")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PayrollDetail", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("PayrollDetails")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Payroll", "Payroll")
                        .WithMany("PayrollDetails")
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PayrollTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PayrollTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Payroll", "Payroll")
                        .WithMany("PayrollTranslations")
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PetServiceSelectionTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PetServiceSelectionTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.PetServiceSelection", "PetServiceSelection")
                        .WithMany("PetServiceSelectionTranslations")
                        .HasForeignKey("PetServiceSelectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PetServiceSelection");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToan", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("SnailApp.Data.Entities.AppUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("SnailApp.Data.Entities.PhieuKeToanStatus", "PhieuKeToanStatus")
                        .WithMany("PhieuKeToans")
                        .HasForeignKey("PhieuKeToanStatusId");

                    b.HasOne("SnailApp.Data.Entities.AppUser", "SaleStaff")
                        .WithMany()
                        .HasForeignKey("SaleStaffId");

                    b.HasOne("SnailApp.Data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("AppUser");

                    b.Navigation("Customer");

                    b.Navigation("PhieuKeToanStatus");

                    b.Navigation("SaleStaff");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanChiTiet", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.PhieuKeToan", "PhieuKeToan")
                        .WithMany("PhieuKeToanChiTiets")
                        .HasForeignKey("PhieuKeToanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.ProductSKU", "ProductSKU")
                        .WithMany()
                        .HasForeignKey("ProductSKUId");

                    b.Navigation("PhieuKeToan");

                    b.Navigation("ProductSKU");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanChiTiet_AppUser", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("PhieuKeToanChiTiet_AppUsers")
                        .HasForeignKey("AppUserId");

                    b.HasOne("SnailApp.Data.Entities.PhieuKeToanChiTiet", "PhieuKeToanChiTiet")
                        .WithMany("PhieuKeToanChiTiets")
                        .HasForeignKey("PhieuKeToanChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("PhieuKeToanChiTiet");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PhieuKeToanStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.PhieuKeToanStatus", "PhieuKeToanStatus")
                        .WithMany("PhieuKeToanStatusTranslations")
                        .HasForeignKey("PhieuKeToanStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PhieuKeToanStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Post", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.PostStatus", "PostStatus")
                        .WithMany("Posts")
                        .HasForeignKey("PostStatusId");

                    b.HasOne("SnailApp.Data.Entities.PostType", "PostType")
                        .WithMany("Posts")
                        .HasForeignKey("PostTypeId");

                    b.Navigation("PostStatus");

                    b.Navigation("PostType");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostImage", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Post", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PostStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.PostStatus", "PostStatus")
                        .WithMany("PostStatusTranslations")
                        .HasForeignKey("PostStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PostStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PostTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Post", "Post")
                        .WithMany("PostTranslations")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostType", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.PostTypeStatus", "PostTypeStatus")
                        .WithMany("PostTypes")
                        .HasForeignKey("PostTypeStatusId");

                    b.Navigation("PostTypeStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PostTypeStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Language", null)
                        .WithMany("StatusTranslations")
                        .HasForeignKey("LanguageId1");

                    b.HasOne("SnailApp.Data.Entities.PostTypeStatus", "PostTypeStatus")
                        .WithMany("PostTypeStatusTranslations")
                        .HasForeignKey("PostTypeStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PostTypeStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PostTypeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.PostType", "PostType")
                        .WithMany("PostTypeTranslations")
                        .HasForeignKey("PostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PostType");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Product", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Manufacturer", "Manufactuer")
                        .WithMany()
                        .HasForeignKey("ManufactuerId");

                    b.Navigation("Manufactuer");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductInProductType", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("ProductInProductTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.ProductType", "ProductType")
                        .WithMany("ProductInProductTypes")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductSKU", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("ProductSKUs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductSKU_AttributeValue", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AttributeValue", "AttributeValue")
                        .WithMany()
                        .HasForeignKey("AttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.ProductSKU", "ProductSKU")
                        .WithMany("ProductSKU_AttributeValues")
                        .HasForeignKey("ProductSKUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeValue");

                    b.Navigation("ProductSKU");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Product", "Product")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductType", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.ProductTypeStatus", "ProductTypeStatus")
                        .WithMany("ProductTypes")
                        .HasForeignKey("ProductTypeStatusId");

                    b.HasOne("SnailApp.Data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("ProductTypeStatus");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("ProductTypeStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.ProductTypeStatus", "ProductTypeStatus")
                        .WithMany("ProductTypeStatusTranslations")
                        .HasForeignKey("ProductTypeStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("ProductTypeStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("ProductTypeTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.ProductType", "ProductType")
                        .WithMany("ProductTypeTranslations")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion_CommissionDiscount", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.CommissionDiscount", "CommissionDiscount")
                        .WithMany("Promotion_CommissionDiscounts")
                        .HasForeignKey("CommissionDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Promotion", "Promotion")
                        .WithMany("Promotion_CommissionDiscounts")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommissionDiscount");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion_ProductSKU", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.ProductSKU", "ProductSKU")
                        .WithMany("Promotion_ProductSKUs")
                        .HasForeignKey("ProductSKUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Promotion", "Promotion")
                        .WithMany("Promotion_ProductSKUs")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSKU");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PromotionTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("PromotionTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Promotion", "Promotion")
                        .WithMany("PromotionTranslations")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Slide", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.SlideStatus", "SlideStatus")
                        .WithMany("Slides")
                        .HasForeignKey("SlideStatusId");

                    b.Navigation("SlideStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("SlideStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.SlideStatus", "SlideStatus")
                        .WithMany("SlideStatusTranslations")
                        .HasForeignKey("SlideStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SlideStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("SlideTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Slide", "Slide")
                        .WithMany("SlideTranslations")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SoDuDauKyHangHoa", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.ProductSKU", "ProductSKU")
                        .WithMany()
                        .HasForeignKey("ProductSKUId");

                    b.HasOne("SnailApp.Data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("ProductSKU");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SoDuDauKySoQuy", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Store", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.StoreStatus", "StoreStatus")
                        .WithMany("Stores")
                        .HasForeignKey("StoreStatusId");

                    b.Navigation("StoreStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreStatusTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("StoreStatusTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.StoreStatus", "StoreStatus")
                        .WithMany("StoreStatusTranslations")
                        .HasForeignKey("StoreStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("StoreStatus");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("StoreTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Store", "Store")
                        .WithMany("StoreTranslations")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Transaction", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.AppUser", "AppUser")
                        .WithMany("Transactions")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.UnitTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("UnitTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.Unit", "Unit")
                        .WithMany("UnitTranslations")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.WebsiteMenuTranslation", b =>
                {
                    b.HasOne("SnailApp.Data.Entities.Language", "Language")
                        .WithMany("WebsiteMenuTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnailApp.Data.Entities.WebsiteMenu", "WebsiteMenu")
                        .WithMany("WebsiteMenuTranslations")
                        .HasForeignKey("WebsiteMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("WebsiteMenu");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.About", b =>
                {
                    b.Navigation("AboutTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppRole", b =>
                {
                    b.Navigation("AppRoleTranslations");

                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserFeedbacks");

                    b.Navigation("AppUserHelps");

                    b.Navigation("AppUser_AppUserTypes");

                    b.Navigation("AppUser_BasicSalarys");

                    b.Navigation("AppUser_CommissionDiscounts");

                    b.Navigation("AppUser_Promotions");

                    b.Navigation("Carts");

                    b.Navigation("FavoriteProducts");

                    b.Navigation("PayrollDetails");

                    b.Navigation("PhieuKeToanChiTiet_AppUsers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserStatus", b =>
                {
                    b.Navigation("AppUserStatusTranslations");

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AppUserType", b =>
                {
                    b.Navigation("AppUserTypeTranslations");

                    b.Navigation("AppUser_AppUserTypes");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Attribute", b =>
                {
                    b.Navigation("AttributeTranslations");

                    b.Navigation("AttributeValues");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.AttributeValue", b =>
                {
                    b.Navigation("AttributeValueTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.BasicSalary", b =>
                {
                    b.Navigation("AppUser_BasicSalarys");

                    b.Navigation("BasicSalaryTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CommissionDiscount", b =>
                {
                    b.Navigation("AppUser_CommissionDiscounts");

                    b.Navigation("CommissionDiscountTranslations");

                    b.Navigation("Promotion_CommissionDiscounts");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Country", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.CustomerType", b =>
                {
                    b.Navigation("CustomerTypeTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.DocTemplateType", b =>
                {
                    b.Navigation("DocTemplateTypeTranslations");

                    b.Navigation("DocTemplates");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Gender", b =>
                {
                    b.Navigation("GenderTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Language", b =>
                {
                    b.Navigation("AboutTranslations");

                    b.Navigation("AppRoleTranslations");

                    b.Navigation("AppUserStatusTranslations");

                    b.Navigation("AppUserTypeTranslations");

                    b.Navigation("AttributeTranslations");

                    b.Navigation("AttributeValueTranslations");

                    b.Navigation("BasicSalaryTranslations");

                    b.Navigation("CommissionDiscountTranslations");

                    b.Navigation("CustomerTypeTranslations");

                    b.Navigation("DocTemplateTypeTranslations");

                    b.Navigation("GenderTranslations");

                    b.Navigation("ManufactuerTranslations");

                    b.Navigation("MenuTranslations");

                    b.Navigation("OrderStatusTranslations");

                    b.Navigation("PayrollTranslations");

                    b.Navigation("PetServiceSelectionTranslations");

                    b.Navigation("PhieuKeToanStatusTranslations");

                    b.Navigation("PostStatusTranslations");

                    b.Navigation("PostTranslations");

                    b.Navigation("PostTypeStatusTranslations");

                    b.Navigation("PostTypeTranslations");

                    b.Navigation("ProductTranslations");

                    b.Navigation("ProductTypeStatusTranslations");

                    b.Navigation("ProductTypeTranslations");

                    b.Navigation("PromotionTranslations");

                    b.Navigation("SlideStatusTranslations");

                    b.Navigation("SlideTranslations");

                    b.Navigation("StatusTranslations");

                    b.Navigation("StoreStatusTranslations");

                    b.Navigation("StoreTranslations");

                    b.Navigation("UnitTranslations");

                    b.Navigation("WebsiteMenuTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Manufacturer", b =>
                {
                    b.Navigation("ManufacturerTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Menu", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("MenuTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.OrderStatus", b =>
                {
                    b.Navigation("OrderStatusTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PaperSize", b =>
                {
                    b.Navigation("DocTemplates");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Payroll", b =>
                {
                    b.Navigation("PayrollDetails");

                    b.Navigation("PayrollTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PetServiceSelection", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("PetServiceSelectionTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToan", b =>
                {
                    b.Navigation("PhieuKeToanChiTiets");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanChiTiet", b =>
                {
                    b.Navigation("PhieuKeToanChiTiets");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PhieuKeToanStatus", b =>
                {
                    b.Navigation("PhieuKeToanStatusTranslations");

                    b.Navigation("PhieuKeToans");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Post", b =>
                {
                    b.Navigation("PostImages");

                    b.Navigation("PostTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostStatus", b =>
                {
                    b.Navigation("PostStatusTranslations");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostType", b =>
                {
                    b.Navigation("PostTypeTranslations");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.PostTypeStatus", b =>
                {
                    b.Navigation("PostTypeStatusTranslations");

                    b.Navigation("PostTypes");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("FavoriteProducts");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductInProductTypes");

                    b.Navigation("ProductSKUs");

                    b.Navigation("ProductTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductSKU", b =>
                {
                    b.Navigation("ProductSKU_AttributeValues");

                    b.Navigation("Promotion_ProductSKUs");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductType", b =>
                {
                    b.Navigation("ProductInProductTypes");

                    b.Navigation("ProductTypeTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.ProductTypeStatus", b =>
                {
                    b.Navigation("ProductTypeStatusTranslations");

                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Promotion", b =>
                {
                    b.Navigation("AppUser_Promotions");

                    b.Navigation("PromotionTranslations");

                    b.Navigation("Promotion_CommissionDiscounts");

                    b.Navigation("Promotion_ProductSKUs");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Slide", b =>
                {
                    b.Navigation("SlideTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.SlideStatus", b =>
                {
                    b.Navigation("SlideStatusTranslations");

                    b.Navigation("Slides");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Store", b =>
                {
                    b.Navigation("StoreTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.StoreStatus", b =>
                {
                    b.Navigation("StoreStatusTranslations");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.Unit", b =>
                {
                    b.Navigation("UnitTranslations");
                });

            modelBuilder.Entity("SnailApp.Data.Entities.WebsiteMenu", b =>
                {
                    b.Navigation("WebsiteMenuTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
